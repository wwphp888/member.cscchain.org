<?php
/**
 * Created by PhpStorm.
 * User: pengjiang
 * Date: 2019/5/19
 * Time: 11:30
 */

namespace api\block\controller;

use api\common\controller\ApiUserController;
use api\common\model\MedalModel;
use think\Db;

class MedalController extends ApiUserController
{
    protected $db = null;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->db = new MedalModel();
    }

    /**
     * 勋章首页
     */
    public function index()
    {
        $data = $this->db->getMedal($this->uid);

        if ($data['medal_money'] > 0)
        {
            $loading = floor(($data['medal_money'] / 20000) * 100);
        } else {
            $loading = 0;
        }

        $data['loading'] = $loading;
        if (isset($data['medal_time']) && $data['medal_time'] > time())
        {
            //进1
            $medal_time = ceil(($data['medal_time'] - time()) / 86400) + 0;
        } else {
            $medal_time = 0;
        }

        $data['countdown'] = $medal_time;
        unset($data['mid']);

        $this->success($data);
    }

    /**
     * 勋章转账
     */
    public function transaction()
    {
        $mid = $this->uid;
        if (empty($mid))
        {
            return $this->error(lang("error"));
        }

        $number = strip_tags(trim($this->data['id']??''));
        $medal  = strip_tags(intval($this->data['medal']??''));

        if (empty($this->data['id'])) {
            $this->error("对方账户ID不能为空");
        }
        if (empty($medal)) {
            $this->error("勋章不能为空");
        }
        //勋章不能小于0不能不为正整数
        if ($medal < 0 || !preg_match("/^[1-9][0-9]*$/", $medal)) {
            $this->error(lang("medal_error"));
        }

        $medal_transaction = redis()->get('medal_transaction');

        if ($medal_transaction)
        {
            return $this->error(lang('operating_fast'));
        }

        //限流2秒
        redis()->set('medal_transaction', 1, 2);
        $where['id'] = $mid;
        $user        = dbMember("members")->where($where)->find();

        //禁用用户
        if ($user['is_dis_award'] == 1) {
            return $this->error(lang("account_frozen"));
        }
        //对方账户是否存在
        $touser = dbMember("members")->where("number", $number)->find();

        if (empty($touser)) {
            return $this->error(lang("user_not_exist"));
        }
        //查看用户勋章数
        $user_medal = $this->db->getMedal($mid, 'medal');
        if ($medal > $user_medal || $user_medal < 0) {
            $this->error(lang("medal_insufficient"));
        }

        $payPwd     = cmf_password($this->data['payPassword']);
        $memberPay  = $user['trade_pwd'];

        //判断交易密码
        if ($payPwd != $memberPay) {
            return $this->error(lang("transaction_password_error"));
        }

        Db::startTrans();
        $msg = '勋章出账';

        if ($this->db->medalChange($mid, $touser['id'], -$medal, 1, $msg) === false) {
            Db::rollback();
            $this->error(lang("failed_transfer"));
        }

        $msg = '勋章入账';

        if ($this->db->medalChange($touser['id'], $mid, $medal, 2, $msg) === false) {
            Db::rollback();
            $this->error(lang("failed_transfer"));
        }

        Db::commit();

        $this->success(lang("successful_transfer"));
    }
}